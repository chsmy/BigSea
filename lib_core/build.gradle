apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.android.compileSdkVersion
    buildToolsVersion rootProject.android.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.android.minSdkVersion
        targetSdkVersion rootProject.android.targetSdkVersion
        versionCode rootProject.android.versionCode
        versionName rootProject.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            //自定义Gradle常量
            buildConfigField("boolean","LOG_DEBUG","true")
            buildConfigField("String","LOG_TAG","\"BigSea\"")
            minifyEnabled false
        }
        release {
            //自定义Gradle常量
            buildConfigField("boolean","LOG_DEBUG","false")
            buildConfigField("String","LOG_TAG","\"BigSea\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.android.support:multidex:1.0.3'
    api 'androidx.core:core-ktx:1.5.0-alpha05'
    api 'com.github.bumptech.glide:glide:4.11.0'
    api 'androidx.palette:palette:1.0.0'
    api 'com.squareup.okhttp3:okhttp:4.2.2'
    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.google.code.gson:gson:2.8.6'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-beta01'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'org.koin:koin-androidx-viewmodel:2.0.1'
    api 'org.koin:koin-androidx-scope:2.0.1'
    api 'com.gyf.immersionbar:immersionbar:3.0.0'
    api 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
    api 'com.gyf.immersionbar:immersionbar-components:3.0.0'
//    api 'com.blankj:utilcodex:1.26.0'
    api 'androidx.navigation:navigation-fragment:2.3.2'
    api 'androidx.navigation:navigation-ui:2.3.2'
    api 'com.kingja.loadsir:loadsir:1.3.8'

    api 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    api 'androidx.room:room-ktx:2.2.5'

    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    api 'com.permissionx.guolindev:permissionx:1.2.2'

    api "androidx.fragment:fragment-ktx:1.2.5"
    api "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    api project(':IMLib')
    //华为二维码扫描
    api 'com.huawei.hms:scan:1.1.3.301'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
